services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: 99wealth_api
    restart: unless-stopped
    tty: true    
    depends_on:
      - timescaledb    
    volumes:
      - .:/var/www
    networks:
      - app-network


  #NGINX
  webserver:
    image: nginx:alpine
    container_name: 99wealth_webserver
    restart: unless-stopped
    tty: true
    depends_on:
      - app
    ports:
      - 8181:8181
    volumes:
      - ./:/var/www/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: 99wealth_timescaledb
    environment:
      POSTGRES_DB: 99wealth
      POSTGRES_USER: ${WEALTH_DB_USERNAME}
      POSTGRES_PASSWORD: ${WEALTH_DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - ${WEALTH_TIMESCALEDB_VOLUME}:/var/lib/postgresql/data
      - ./init-databases.sh:/docker-entrypoint-initdb.d/init-databases.sh

  
  # timescaledb_test:
  #   image: timescale/timescaledb:latest-pg14
  #   container_name: 99wealth_timescaledb_test
  #   environment:
  #     POSTGRES_DB: 99wealth_test
  #     POSTGRES_USER: ${WEALTH_DB_USERNAME}
  #     POSTGRES_PASSWORD: ${WEALTH_DB_PASSWORD}
  #   ports:
  #     - "5433:5432"
  #   networks:
  #     - app-network
  #   volumes:
  #     - ./db_test:/var/lib/postgresql/data
  

  redis:
    image: redis:alpine
    container_name: 99wealth_redis
    restart: unless-stopped
    tty: true
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${WEALTH_REDIS_PASSWORD} 
    command: redis-server --requirepass ${WEALTH_REDIS_PASSWORD}
    volumes:
      - ${WEALTH_REDIS_VOLUME}:/data
    networks:
      - app-network

networks:
  app-network:

# volumes:
#   timescale_data:
